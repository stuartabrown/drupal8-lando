language: php

# This can be set to whatever you want since Lando is taking care of your deps
php:
  - 7.2

cache:
  directories:
    - $HOME/.composer/cache/files
    - $HOME/.composer/cache/repo
    - $TMPDIR/phpstan/cache

services:
  - docker

before_install:

  # Install Hyperdrive
  - sudo apt-get -y update
  - sudo apt-get -y install cgroup-bin curl
  - sudo bash -c "curl -Ls https://github.com/lando/hyperdrive/releases/download/v0.5.4/hyperdrive > /usr/local/bin/hyperdrive"
  - sudo chmod +x /usr/local/bin/hyperdrive

script:
  # Add Repo key to prevent hyperdrive install errors.
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6B05F25D762E3157

  # Setup hyperdrive
  - hyperdrive -y --name "James T. Kirk" --email kirk@enterprise.mil

  # Start Lando
  - lando start -v
  - pwd
  - ls -a





#   # Run non-db required tests eg linting/code standards/unit tests
#   # Lint the codez
#   - lando phplint

#   # Check code standards
#   - lando phpcs --config-set installed_paths /app/vendor/drupal/coder/coder_sniffer
#   - lando phpcs -n --report=full --standard=Drupal --ignore=*.tpl.php --extensions=install,module,php,inc,theme web/modules/custom web/themes/custom web/profiles

#   # Unit tests
#   - lando phpunit -c docroot/core --testsuite unit --exclude-group Composer docroot/modules/custom
#   - lando phpunit -c docroot/core --testsuite unit --exclude-group Composer docroot/themes/custom

#   # Check for Drupal 9 Deprecations
#   - lando phpstan analyse docroot/modules/custom docroot/themes/custom

#   # Sleep for 10 seconds so certs can load
#   - sleep 10

#   # Do platform stuff
#   # Verify we are logged in
#   - lando platform auth:info

#   # Generate and post an ssh key and then wait because Platform seems to
#   # refresh keys every 90 seconds
#   # NOTE: If you are getting consistent DB pull failures then you might want to increase the sleep
#   - lando platform ssh-key:add -y
#   - sleep 200

#   # Dump and import the database
#   # - lando platform db:dump --gzip --file=dump.sql.gz --project=$PLATFORMSH_PROJECT_ID --environment=master --identity-file=/var/www/.ssh/id_rsa
#   # - lando db-import dump.sql.gz
#   # - rm -f dump.sql.gz
#   # - lando blt drupal:sync

#   # Hook up the Lando command we defined earlier in .lando.yml to the blt executable cli tool wyth a symlink:
#   - lando ssh -u root -c "ln -s /app/lightning/vendor/acquia/blt/bin/blt /usr/bin/blt"

#   # This could be potentially problematic if someone adds their own ssh key after we generate one above
#   # and before we run the below
#   - lando ssh -c "/var/www/.platformsh/bin/platform ssh-key:delete \$(/var/www/.platformsh/bin/platform ssh-keys --format=csv | tail -1 | cut -d ',' -f 1)"

#   # Check to see if we succeeded
#   # - cd docroot
#   - lando drush status && lando drush cr
#   - cd ..

#   # Run db required tests eg behat
#   #- lando behat --config=/app/tests/behat-lando.yml

#   # Run non-db required tests eg linting/code standards/unit tests
#   # Lint the codez
#   - lando blt help
#   - lando phplint
#   - lando blt deploy

#   # Check code standards
#   # - lando phpcs --config-set installed_paths /app/vendor/drupal/coder/coder_sniffer
#   # - lando phpcs -n --report=full --standard=Drupal --ignore=*.tpl.php --extensions=install,module,php,inc web/modules web/themes web/profiles

#   # Run unit tests.
#   # - lando composer drupal-unit-tests

# addons:
#   ssh_known_hosts: svn-6182.devcloud.hosting.acquia.com
#   chrome: stable

# deploy:
#   - provider: script
#     script: "${BLT_DIR}/scripts/travis/deploy_branch"
#     skip_cleanup: true
#     on:
#       branch: develop
#       php: 7.2
#   - provider: script
#     script: "${BLT_DIR}/scripts/travis/deploy_branch"
#     skip_cleanup: true
#     on:
#       branch: master
#       php: 7.2
#   - provider: script
#     script: "${BLT_DIR}/scripts/travis/deploy_tag"
#     skip_cleanup: true
#     on:
#       tags: true
#       php: 7.2
